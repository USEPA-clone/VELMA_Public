extends layout.pug
block content
  h1
    | Configuring the Default Sediment Model
  h2
    | Overview
  p
    | Starting with version 2.1.0.36 the VELMA simulator contains an implementation of Bob McKane's Prototype Sediment Model for VELMA. Like the model, the implementation is a prototype, albeit functional within its limitations.
  p
    | Simulation configurations that include a sediment model parameterization model computes and reports "Loss" amounts simulating sediment movement from ridge to stream, corresponding to amounts "lost" at the watershed outlet on a per-day basis. The model also provides a variety of spatially-explicit, cell-specific data results.
    br
    |  See the 
    a
      | Sediment Output Data Summary
    |  for details.
  p
    | The sediment mechanism changes the spatial distribution of detrius leaf and top-layer humus amounts over the course a simulation run relative to a simulation run of the same configuration without the sediment mechanism. Those differences directly affect VELMA cover, soil (for humus) and chemistry calculations, and through them, indirectly affect water flow.
  h2
    | Limitations
  p
    | Be aware of the following limitations regarding the sediment model and its use.
  ul
    li
      p
        | The sediment model only simulates cell-to-cell movement of detritus leaf and humus amounts 
        em
          | in solution
        | . It does not simulate soil particulates.
    li
      p
        | The sediment model is not currently supported by VELMA's Water Drains disturbance mechanism.
        br
        |  If you configure a simulation to include both a the sediment model and a water drains disturbance, the water drains disturbance will ignore sediment amounts during transport. Because of this "disconnect", 
        strong
          | do not configure a simulation for both water drains and sediment
        | .
    li
      p
        | If you configure a multiple-map simulation configuration that utilizes the sediment model, 
        em
          | all
        |  simulation configurations that are part of the overall multiple-map simulation effort must be configured with the same set of cover and soil parameterizations, and all must use the same 
        code
          | uniqueId
        |  and 
        code
          | uniqueName
        |  values within those parameterizations.
    li
      p
        | Sediment model Loss results suffer the same reduction in accuracy under (multiple-map + multiple-scale) simulation configurations that runoff and contaminant and chemisty loss results do.
  h2
    | Requirements
  ul
    li
      | VELMA v2.1.0.36 or later.
    li
      | A simulation configuration that 
      strong
        | does not
      |  include a Water Drains Disturbance parameterization (per 
      a
        | Limitations
      |  above).
  h2
    | Adding and Configuring the Sediment Model
  p
    | In JVelma, click the 
    code
      | Edit
    |  --> 
    code
      | Set Sediment Model
    |  --> 
    code
      | Default Sediment Model
    |  menu item.
    br
    |  This adds the sediment parameterization group to the configuration, shifts to JVelma's GUI to display "All Parameters" tab, and sets the selector-filter to "sediment".
    br
    |  The sediment group's parameters initially have these default values:
  table
    thead
      tr
        th
          | Group
        th
          | Item
        th
          | Parameter
        th
          | Value
    tbody
      tr
        td
          | sediment
        td
          | DefaultSedimentModel
        td
          | enableCategorizedLossTransfersReport
        td
          | false
      tr
        td
          | sediment
        td
          | DefaultSedimentModel
        td
          | modelClass
        td
          | gov.epa.velmasimulator.DefaultSedimentModel
      tr
        td
          | sediment
        td
          | DefaultSedimentModel
        td
          | setBiomassLeafTransportScalarB
        td
      tr
        td
          | sediment
        td
          | DefaultSedimentModel
        td
          | setDetritusLeafCtoNcorrectionConstant
        td
      tr
        td
          | sediment
        td
          | DefaultSedimentModel
        td
          | setDetritusLeafDryWeight
        td
      tr
        td
          | sediment
        td
          | DefaultSedimentModel
        td
          | setDetritusLeafMmPerH2Omm
        td
      tr
        td
          | sediment
        td
          | DefaultSedimentModel
        td
          | setDetritusLeafToHumusTransportRatioKs
        td
      tr
        td
          | sediment
        td
          | DefaultSedimentModel
        td
          | setDetritusLeafTransportScalarB
        td
      tr
        td
          | sediment
        td
          | DefaultSedimentModel
        td
          | setFaccTransportScalarA
        td
          | 1.0
      tr
        td
          | sediment
        td
          | DefaultSedimentModel
        td
          | setFaccTransportScalarB
        td
          | 0.5
      tr
        td
          | sediment
        td
          | DefaultSedimentModel
        td
          | setHumusMmPerH2Omm
        td
      tr
        td
          | sediment
        td
          | DefaultSedimentModel
        td
          | setSlopeTransportScalarA
        td
          | 1.0
      tr
        td
          | sediment
        td
          | DefaultSedimentModel
        td
          | setSlopeTransportScalarB
        td
          | 0.5
      tr
        td
          | sediment
        td
          | DefaultSedimentModel
        td
          | uniqueId
        td
          | 1
      tr
        td
          | sediment
        td
          | DefaultSedimentModel
        td
          | uniqueName
        td
          | DefaultSedimentModel
  ul
    li
      strong
        | No parameter values may be left blank
      |  (even though several parameter values default as blank).
      br
      |  Blank default values indicate parameters that JVelma does not know how to provide a default for.
    li
      | The Facc and Slope parameters' default values should be treated as placeholders: they are almost certain to require adjustment for proper calibration of a specific simulation site.
  h3
    | Cover and Soil Specific Parameters
  p
    | Several sediment model parameters require the specification of distinct values for 
    em
      | each and every
    |  cover or soil type specified in the simulation configuration.
  table
    thead
      tr
        th
          | Parameter
        th
          | Requires a value for each ...
    tbody
      tr
        td
          | setBiomassLeafTransportScalarB
        td
          | cover uniqueId
      tr
        td
          | setDetritusLeafCtoNcorrectionConstant
        td
          | cover uniqueId
      tr
        td
          | setDetritusLeafDryWeight
        td
          | cover uniqueId
      tr
        td
          | setDetritusLeafMmPerH2Omm
        td
          | cover uniqueId
      tr
        td
          | setDetritusLeafToHumusTransportRatioKs
        td
          | cover (
          em
            | not
          |  soil) uniqueId
      tr
        td
          | setDetritusLeafTransportScalarB
        td
          | cover uniqueId
      tr
        td
          | setHumusMmPerH2Omm
        td
          | soil uniqueId
  p
    | Multiple parameter values are specified for these parameters as a sequence of whitespace-separated 
    code
      | ID:value
    |  pairs.
  blockquote
    p
      em
        | Example
      br
      |  Suppose a simulation configuration has 3 cover types, with 
      code
        | uniqueId
      |  parameters 
      code
        | 1
      | , 
      code
        | 3
      | , and 
      code
        | 501
      | .
      br
      |  A valid parameterization for the 
      code
        | setBiomassLeafTransportScalarB
      |  parameter might be specified as: 
      code
        | 1:0.40 3:075 501:0.05
  p
    | The 
    code
      | ID:value
    |  notation must be used even when only one cover and/or soil type are specified.
  blockquote
    p
      em
        | Example
      br
      |  Suppose a simulation configuration specifies only one soil type, with 
      code
        | uniqueId
      |  of 
      code
        | 7
      | .
      br
      |  A valid parameter value for 
      code
        | setHumusMmPerH2Omm
      |  might be 
      code
        | 7:0.30
      | , however simply specifying 
      code
        | 0.30
      |  instead would be 
      strong
        | invalid
      | .
  p
    | JVelma's "All Parameters" tab can be used to determine the simulation configuration's cover and soil uniqueId values:
  ul
    li
      | Click the "All Parameters" tab.
    li
      | Click-select "cover" (or "soil") in the drop-selection filter.
    li
      | Type "uniqueId" (case sensitive) into the middle ("Parameter" column) text-selection filter textbox and press either the "Tab" or "Enter" key.
      br
      |  
      em
        | Example
      br
      |  
      img
  h3
    | Parameter Details
  p
    strong
      | enableCategorizedLossTransfersReport
    br
    |  Determines whether the sediment model emits 
    a
      | additional detailed loss data
    |  as part of the simulation results.
    br
    |  When set 
    code
      | true
    |  per-step counts and amounts for sediment loss transfers are reported as csv data rows in the simulation's global trace log file.
    br
    |  The csv data rows are identified by a keytext column: 
    code
      | LOSS_TRANSFER_REPORT
    | .
    br
    |  Each data row reports sediment transfer counts and amounts for the cell-to-cell transfer categories that comprise daily sediment loss values.
    br
    |  This parameter's default value is 
    code
      | false
    | .
  p
    strong
      | modelClass
    br
    |  This parameter's value is the actual Java class name of this sediment model.
    br
    |  It should be set to the correct value (
    code
      | gov.epa.velmasimulator.DefaultSedimentModel
    | ) by default.
    br
    |  Do not change this parameter's value unless it is not set to the default value -- if it is not, then setting it to the default value is not only allowed, but required.
  p
    strong
      | setBiomassLeafTransportScalarB
    br
    |  The base ("B") parameter used to compute Biomass Leaf transport scalar values via the following exponential equation:
  pre
    code
      | gNm2BiomassLeafAmount
      | biomassLeafTransportScalar = biomassLeafTransportScalarB^

  p
    | Each "B" parameter specified must be within the range (0.0, 1.0).
    br
    |  This parameter is 
    a
      | cover-specific
    | .
    br
    |  Specify a 
    code
      | uniqueId:biomassLeafTransportScalarB
    |  pair for each cover type specfied for this simulation. Specify the pairs as a whitespace-delineated sequence for this parameter.
  blockquote
    p
      em
        | Example
      br
      |  A simulation with 3 cover types, and uniqueId values of 1, 7, and 23 might specify the following for this parameter: 
      code
        | 1:0.40 7:0.15 23:0.58
  p
    strong
      | setDetritusLeafCtoNcorrectionConstant
    |  Correction-constant multiplier for the C/N ratio of DetritusLeaf.
    br
    |  Corrects the C/N ratio for:
  ul
    li
      | The presence of fine wood (high C/N) in forest floor.</li>
    li
      | VELMA's lack of live foliage retranslocation prior to litterfall.</li>
  p
    | This parameter is 
    a
      | cover-specific
    | .
    br
    |  Specify a 
    code
      | uniqueId:detritusLeafCtoNcorrectionConstant
    |  pair for each cover type specfied for this simulation. Specify the pairs as a whitespace-delineated sequence for this parameter.
    br
    |  Each 
    code
      | uniqueId:detritusLeafCtoNcorrectionConstant
    |  pair specified must have 
    code
      | detritusLeafCtoNcorrectionConstant
    |  value greater than 0.
  blockquote
    p
      em
        | Example
      br
      |  A simulation with 3 cover types, and uniqueId values of 1, 7, and 23 might specify the following for this parameter: 
      code
        | 1:1.0 7:1.5 23:2.0
  p
    strong
      | setDetritusLeafDryWeight
    br
    |  Detritus Leaf Dry Weight values (in units of cm3/g).
    br
    |  Known detritus Leaf Dry Weight values are required for conversion between gN/m2 and mm amounts: these must be provided from appropriate literature or user-experience.
    br
    |  This parameter is 
    a
      | cover-specific
    | .
    br
    |  Specify a 
    code
      | uniqueId:dryWeightValue
    |  pair for each cover type specfied for this simulation. Specify the pairs as a whitespace-delineated sequence for this parameter.
  blockquote
    p
      em
        | Example
      br
      |  A simulation with 3 cover types, and uniqueId values of 1, 7, and 23 might specify the following for this parameter: 
      code
        | 1:0.20 7:0.15 23:0.48
  p
    strong
      | setDetritusLeafMmPerH2Omm
    br
    |  The number of mm of Detritus Leaf that can be transported by 1 mm of scalar-adjusted lateral-out water movement.
    br
    |  This parameter is 
    a
      | cover-specific
    | .
    br
    |  Specify a 
    code
      | uniqueId:detritusLeafMmPerH2Omm
    |  pair for each cover type specfied for this simulation. Specify the pairs as a whitespace-delineated sequence for this parameter. Each 
    code
      | detritusLeafMmPerH2Omm
    |  value specified must be greater than zero.
  blockquote
    p
      em
        | Example
      br
      |  A simulation with 3 cover types, and uniqueId values of 1, 7, and 23 might specify the following for this parameter: 
      code
        | 1:1.8 7:1.5 23:2.0
  p
    strong
      | setDetritusLeafToHumusTransportRatioKs
    br
    |  The ("Ks") parameter of the Detritus Leaf-to-Humus transport ratio equation.
    br
    |  The ratio is computed in terms of Detritus Leaf alone, using a Monod equation with the form:
  pre
    code
      | ratio = ratioMax * (mm of detritus leaf) / (detritus leaf Ks + mm of detritus leaf))

  p
    | Note: 
    code
      | ratio
    | 's value must not exceed 1.0, so 
    code
      | ratioMax
    |  is fixed at 1.0, never changes, and is omitted from the actual calculation.
    br
    |  This parameter is 
    a
      | cover-specific
    | .
    br
    |  Specify a 
    code
      | uniqueId:Ks
    |  pair for each cover type specfied for this simulation. Specify the pairs as a whitespace-delineated sequence for this parameter. Each "Ks" parameter value must be zero or greater."
  blockquote
    p
      em
        | Example
      br
      |  A simulation with 3 cover types, and uniqueId values of 1, 7, and 23 might specify the following for this parameter: 
      code
        | 1:2.00 7:1.50 23:0.80
  p
    strong
      | setDetritusLeafTransportScalarB
    br
    |  The base ("B") parameter used to compute Detritus Leaf transport scalar values via the following exponential equation:
  pre
    code
      | detritusLeafTransportScalar = detritusLeafTransportScalarB^gNm2DetritusLeafAmount

  p
    | This parameter is 
    a
      | cover-specific
    | .
    br
    |  Specify a 
    code
      | uniqueId:detritusLeafTransportScalarB
    |  pair for each cover type specfied for this simulation. Specify the pairs as a whitespace-delineated sequence for this parameter.
    br
    |  Each "B" parameter specified must be within the range (0.0, 1.0)
  blockquote
    p
      em
        | Example
      br
      |  A simulation with 3 cover types, and uniqueId values of 1, 7, and 23 might specify the following for this parameter: 
      code
        | 1:0.65 7:0.70 23:0.40
  p
    strong
      | setFaccTransportScalarA
    br
    |  The ("a") parameter of the flow accumulation (facc) transport scalar's equation.
    br
    |  The slope transporation scalar is computed using a logistic equation with the form:
  pre
    code
      | y = exp(-a + b * faccValue) / (1 + exp(-a + b * faccValue))

  p
    | The function will negate the provided "a" value: do NOT set "a" as a negative value.
  p
    strong
      | setFaccTransportScalarB
    br
    |  The ("b") parameter of the flow accumulation (facc) transport scalar's equation.
    br
    |  The slope transporation scalar is computed using a logistic equation with the form:
  pre
    code
      | y = exp(-a + b * faccValue) / (1 + exp(-a + b * faccValue))

  p
    | The "b" parameter's value must be in the range [0, 1), and 0 is deprecated.
    br
    |  VELMA logs a warning when "b" equals 0, but permits the simulation to run.
  p
    strong
      | setHumusMmPerH2Omm
    br
    |  The number of mm of Humus that can be transported by 1 mm of scalar-adjusted lateral-out water movement. This parameter is 
    a
      | soil-specific
    | .
    br
    |  Specify a 
    code
      | uniqueId:HumusMmPerH2Omm
    |  pair for each cover type specfied for this simulation. Specify the pairs as a whitespace-delineated sequence for this parameter. Each 
    code
      | humusMmPerH2Omm
    |  value specified must be greater than zero."
  blockquote
    p
      em
        | Example
      br
      |  A simulation with 2 soil types, and uniqueId values of 2 and 8 might specify the following for this parameter: 
      code
        | 2:2.5 8:4.0
  p
    strong
      | setSlopeTransportScalarA
    br
    |  The ("a") parameter of the slope transport scalar's equation.
    br
    |  The slope transporation scalar is computed using a logistic equation with the form:
  pre
    code
      | y = exp(-a + b * slopePercent) / (1 + exp(-a + b * slopePercent))

  p
    | The function will negate the provided "a" value: do NOT set "a" as a negative value.
  p
    strong
      | setSlopeTransportScalarB
    br
    |  The "b" parameter of the slope transport scalar's equation.
    br
    |  The slope transporation scalar is computed using a logistic equation with the form:
  pre
    code
      | y = exp(-a + b * slopePercent) / (1 + exp(-a + b * slopePercent))

  p
    | The "b" parameter's value must be in the range [0, 1), and 0 is deprecated. VELMA logs a warning when "b" == 0, but permits the simulation to run.
  p
    strong
      | uniqueId
    br
    |  The unique identification index number for this sediment model instance.
    br
    |  JVelma sets this parameter to a valid default value automatically: if this contaminant group is added via JVelma's GUI, there should be no need to modify the existing value for this parameter.
    br
    |  If you modify the default value, you must abide by the following:
  ul
    li
      | The 
      code
        | uniqueId
      |  value must be unique among all sediment models specified for a given simulation configuration.
    li
      | Do NOT assign 
      code
        | uniqueId
      |  a value less than zero; doing so signals "not initialized" to the VELMA Simulator.
  p
    strong
      | uniqueName
    br
    |  The unique name for this sediment model instance.
    br
    |  JVelma sets this parameter to a valid default value automatically: if this contaminant group is added via JVelma's GUI, there should be no need to modify the existing value for this parameter. Changing 
    code
      | uniqueName
    | 's value 
    em
      | is
    |  permitted, but is also discouraged.
    br
    |  If you modify the default value, you must abide by the following:
  ul
    li
      | The value text must contain only alphabet characters, digits, and the underscore and hyphen characters.
    li
      | Do NOT set 
      code
        | uniqueName
      |  blank (""); doing so signals "not initialized" to the VELMA Simulator.
  h2
    | Removing the Sediment Model from a Simulation Configuration
  p
    | To remove the sediment model parameterization from simulation configuration,
    br
    |  in JVelma, click the 
    code
      | Edit
    |  --> 
    code
      | Set Sediment Model
    |  --> 
    code
      | NO Sediment Model
    |  menu item.
    br
    |  Warning: this will 
    em
      strong
        | immediately
    |  remove the sediment parameterization group from the configuration!
    br
    |  If you want to retain the sediment parameterization values for future reference, consider saving a copy of the configuration under a different name prior to removing the sediment group.
  h2
    | Appendix A: Configuration Tips
  h3
    | Shutting Off Either the Slope or Facc Transport Scalar
  p
    | Although not recommended, it is possible to "shut off" the effect of either the slope or facc transport scalar by setting the "a" and "b" parameters so that the logistic equation evaluates to zero regardless of the respective slope-percent or flow-accumulation value. Due to the nature of IEEE floating-point arithmetic, the following parameterization ensures the slope or facc transport scalar will always evaluate to zero:
  ol
    li
      | Choose either the slope or facc transport scalar to "shut off".
    li
      | Set that scalar's "a" parameter to "9999.0".
    li
      | Set that scalar's "b" parameter to "0.0".
  p
    | The sediment transport calculation uses 
    code
      | min((slopeTransportScalar + faccTransportScalar), 1.0)
    |  as a multiplicative factor, so when either the slope or facc scalar is zero, the other, non-zero scalar has sole effect.
    br
    |  (This is why zeroing 
    em
      | both
    |  slope and facc scalars is "wrong": 
    code
      | min((0.0 + 0.0), 1.0)
    |  would have the effect of always "maxing out" the slope+facc scalar factor.