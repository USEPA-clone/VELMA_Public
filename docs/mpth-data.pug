- const dataListItems = [
    {
        "pathFile":"HowTo-AscMapOct\\AscMapOct_Guide\\",
        "urlCss":"..\\..\\github.css",
        "urlJs":"..\\..\\index.js",
        "description":"The <code>AscMapOct.py</code> utility script combines the values of two Grid ASCII (.asc) map files, a source map and a destination map,\nto produce a new map with the dimensions and values of the destination map, but with the values of the source map for any\ncell locations that overlap between the two maps."
    },
    {"pathFile":"HowTo-AscRangeMask\\AscRangeMask_Guide\\",
    "urlCss":"..\\..\\github.css",
    "urlJs":"..\\..\\index.js",
    "description":"VELMA users often need to create a raster .asc file of ID or category values, based on the actual values of a different, pre-existing raster .asc map, to use as filter .asc or &quot;jagged-array&quot; .csv data when configuring simulation disturbances.<br>\nThe best way to do this is with a GIS tool, but such tools and the training required to use them are not always readily avaiable.<br>\n<code>AscRangeMask.py</code> is a Python script that can generate a raster .asc file of id or category values, given a &quot;source&quot; raster .asc map, and a sequence of value ranges for that map.<br>\nIt has significant limitations relative to using a GIS tool, but it can be useful as a quickly-available alternative."
    },{
        "pathFile":"HowTo-MoeVelGenerator\\MoeVelGenerator_Guide\\",
        "urlCss":"..\\..\\github.css",
        "urlJs":"..\\..\\index.js",
        "description":"This guide explains what the <code>MoeVelGenerator</code> utility tool is for, and how to use it."
    },
    {
        "pathFile":"HowTo-NashSutcliffeCalculator\\NashSutcliffeCalculator_Guide\\",
        "urlCss":"..\\..\\github.css",
        "urlJs":"..\\..\\index.js",
        "description":"This guide explains how to use the NashSutcliffeCalculator utility."
    },
    {
        "pathFile":"HowTo-NseQuarts.py\\NseQuarts_Guide\\",
        "urlCss":"..\\..\\github.css",
        "urlJs":"..\\..\\index.js",
        "description":"As part of its results, the VELMA simulator generates a &quot;final&quot; Nash-Sutcliffe Efficiency value for runoff, as well as annual values.\nHowever, quarterly runoff NSE values have also proven useful in analyzing simulator runoff behavior during calibration efforts."
    },
    {
        "pathFile":"HowTo-VelmaSimRunner.py\\VelmaSimRunner\\",
        "urlCss":"..\\..\\github.css",
        "urlJs":"..\\..\\index.js",
        "description":"<code>VelmaSimRunner</code> is a utility tool that helps automate running one or more VELMA simulations via VELMA's command line interface.<br>\nThis guide explains its capabilities and how to use it.<br>\n(A separate <a href=\"VelmaSimRunner_QuickRef.html\">quick-reference</a> is available for experienced users.)"
    },
    {
        "pathFile":"HowTo-VelmaSimRunner.py\\VelmaSimRunner_QuickRef\\",
        "urlCss":"..\\..\\github.css",
        "urlJs":"..\\..\\index.js",
        "description":"These are the commands that <a href=\"VelmaSimRunner.html\"><code>VelmaSimRunner</code></a> accepts:"
    }]